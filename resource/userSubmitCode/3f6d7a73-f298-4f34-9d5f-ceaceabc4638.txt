var findMedianSortedArrays = function(nums1, nums2) {
    let m = nums1.length;
    let n = nums2.length;
    if (m > n) {
        [nums1, nums2] = [nums2, nums1];
        [m, n] = [n, m];
    }
    let imin = 0, imax = m;
    let halfLen = Math.floor((m + n + 1) / 2);
    while (imin <= imax) {
        let i = Math.floor((imin + imax) / 2);
        let j = halfLen - i;
        if (i < m && nums2[j-1] > nums1[i]) {
            imin = i + 1;
        } else if (i > 0 && nums1[i-1] > nums2[j]) {
            imax = i - 1;
        } else {
            let maxLeft = 0;
            if (i == 0) maxLeft = nums2[j-1];
            else if (j == 0) maxLeft = nums1[i-1];
            else maxLeft = Math.max(nums1[i-1], nums2[j-1]);

            if ((m + n) % 2 === 1) return parseFloat(maxLeft.toFixed(5));

            let minRight = 0;
            if (i == m) minRight = nums2[j];
            else if (j == n) minRight = nums1[i];
            else minRight = Math.min(nums1[i], nums2[j]);

            return parseFloat(((maxLeft + minRight) / 2).toFixed(5));
        }
    }
    return 0.0;
};
